<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MvcLiteBlog</name>
    </assembly>
    <members>
        <member name="T:MvcLiteBlog.BlogEngine.ArchiveComp">
            <summary>
            The archive comp.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.ArchiveComp.Decrement(System.Int32,System.Int32)">
            <summary>
            The decrement.
            </summary>
            <param name="month">
            The month.
            </param>
            <param name="year">
            The year.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.ArchiveComp.GetArchiveMonths">
            <summary>
            The get archive months.
            </summary>
            <returns>
            The System.Collections.Generic.List`1[T -&gt; LiteBlog.Common.ArchiveMonth].
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.ArchiveComp.GetDefaultMonth">
            <summary>
            The get default month.
            </summary>
            <returns>
            The LiteBlog.Common.ArchiveMonth.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.ArchiveComp.GetMonthName(System.Int32,System.Int32)">
            <summary>
            The get month name.
            </summary>
            <param name="month">
            The month.
            </param>
            <param name="year">
            The year.
            </param>
            <returns>
            The System.String.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.ArchiveComp.Increment(System.Int32,System.Int32)">
            <summary>
            The increment.
            </summary>
            <param name="month">
            The month.
            </param>
            <param name="year">
            The year.
            </param>
        </member>
        <member name="T:MvcLiteBlog.BlogEngine.BlogComp">
            <summary>
            The blog comp.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.BlogComp.ChangeAuthor(System.String,System.String)">
            <summary>
            The change author.
            </summary>
            <param name="fileID">
            The file id.
            </param>
            <param name="author">
            The author.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.BlogComp.ChangeCategory(System.String,System.String,System.String)">
            <summary>
            The change category.
            </summary>
            <param name="fileID">
            The file id.
            </param>
            <param name="oldCatID">
            The old cat id.
            </param>
            <param name="newCatID">
            The new cat id.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.BlogComp.Create(LiteBlog.Common.PostInfo)">
            <summary>
            The create.
            </summary>
            <param name="postInfo">
            The post info.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.BlogComp.Delete(System.String)">
            <summary>
            The delete.
            </summary>
            <param name="fileID">
            The file id.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.BlogComp.GetDefaultPosts">
            <summary>
            The get default posts.
            </summary>
            <returns>
            The System.Collections.Generic.List`1[T -&gt; LiteBlog.Common.PostInfo].
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.BlogComp.GetPostInfo(System.String)">
            <summary>
            The get post info.
            </summary>
            <param name="fileID">
            The file id.
            </param>
            <returns>
            The LiteBlog.Common.PostInfo.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.BlogComp.GetPosts(System.Boolean)">
            <summary>
            The get posts.
            </summary>
            <param name="bRefresh">
            The b refresh.
            </param>
            <returns>
            The System.Collections.Generic.List`1[T -&gt; LiteBlog.Common.PostInfo].
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.BlogComp.GetPostsByAuthor(System.String)">
            <summary>
            The get posts by author.
            </summary>
            <param name="author">
            The author.
            </param>
            <returns>
            The System.Collections.Generic.List`1[T -&gt; LiteBlog.Common.PostInfo].
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.BlogComp.GetPostsByCategory(System.String)">
            <summary>
            The get posts by category.
            </summary>
            <param name="catID">
            The cat id.
            </param>
            <returns>
            The System.Collections.Generic.List`1[T -&gt; LiteBlog.Common.PostInfo].
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.BlogComp.GetPostsByMonth(System.Int32,System.Int32)">
            <summary>
            The get posts by month.
            </summary>
            <param name="year">
            The year.
            </param>
            <param name="month">
            The month.
            </param>
            <returns>
            The System.Collections.Generic.List`1[T -&gt; LiteBlog.Common.PostInfo].
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.BlogComp.PostExists(System.String,System.String@)">
            <summary>
            The post exists.
            </summary>
            <param name="fileId">
            The file id.
            </param>
            <param name="fileId2">
            The file id 2.
            </param>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.BlogComp.Update(System.String,System.String,System.String)">
            <summary>
            Updates a previously published post
            Cannot update time / author of publishing
            </summary>
            <param name="fileID">
            The file ID.
            </param>
            <param name="title">
            The title.
            </param>
            <param name="catID">
            The cat ID.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.BlogComp.GetBlogInfo(System.Boolean)">
            <summary>
            The get blog info.
            </summary>
            <param name="bRefresh">
            The b refresh.
            </param>
            <returns>
            The LiteBlog.Common.PostCollection.
            </returns>
        </member>
        <member name="T:MvcLiteBlog.Helpers.CacheHelper">
            <summary>
            This class is in Common namespace because it 
            is tightly coupled with XmlLayer namespace
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Helpers.CacheHelper.Get``1(System.String)">
            <summary>
            The get.
            </summary>
            <param name="key">
            The key.
            </param>
            <typeparam name="T">
            The T
            </typeparam>
            <returns>
            The T.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Helpers.CacheHelper.Get``1(LiteBlog.Common.CacheType)">
            <summary>
            The get.
            </summary>
            <param name="type">
            The type.
            </param>
            <typeparam name="T">
            The T
            </typeparam>
            <returns>
            The T.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Helpers.CacheHelper.Put(System.String,System.Object)">
            <summary>
            The put.
            </summary>
            <param name="key">
            The key.
            </param>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="M:MvcLiteBlog.Helpers.CacheHelper.Put(LiteBlog.Common.CacheType,System.Object)">
            <summary>
            The put.
            </summary>
            <param name="type">
            The type.
            </param>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="M:MvcLiteBlog.Helpers.CacheHelper.PutPost(System.String,LiteBlog.Common.Post)">
            <summary>
            The put post.
            </summary>
            <param name="fileID">
            The file id.
            </param>
            <param name="post">
            The post.
            </param>
        </member>
        <member name="T:MvcLiteBlog.BlogEngine.CategoryComp">
            <summary>
            The category comp.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.CategoryComp.Decrement(System.String)">
            <summary>
            The decrement.
            </summary>
            <param name="catID">
            The cat id.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.CategoryComp.Delete(System.String)">
            <summary>
            The delete.
            </summary>
            <param name="catID">
            The cat id.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.CategoryComp.GetCategories">
            <summary>
            The get categories.
            </summary>
            <returns>
            The System.Collections.Generic.List`1[T -&gt; LiteBlog.Common.Category].
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.CategoryComp.GetCategory(System.String)">
            <summary>
            The get category.
            </summary>
            <param name="id">
            The id.
            </param>
            <returns>
            The LiteBlog.Common.Category.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.CategoryComp.GetCategoryID(System.String)">
            <summary>
            The get category id.
            </summary>
            <param name="categoryName">
            The category name.
            </param>
            <returns>
            The System.String.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.CategoryComp.GetCategoryName(System.String)">
            <summary>
            The get category name.
            </summary>
            <param name="categoryID">
            The category id.
            </param>
            <returns>
            The System.String.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.CategoryComp.GetDefaultCategory">
            <summary>
            The get default category.
            </summary>
            <returns>
            The LiteBlog.Common.Category.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.CategoryComp.Increment(System.String)">
            <summary>
            The increment.
            </summary>
            <param name="catID">
            The cat id.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.CategoryComp.Insert(System.String,System.String)">
            <summary>
            The insert.
            </summary>
            <param name="catID">
            The cat id.
            </param>
            <param name="catName">
            The cat name.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.CategoryComp.IsUniqueId(System.String)">
            <summary>
            The is unique id.
            </summary>
            <param name="newId">
            The new id.
            </param>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.CategoryComp.IsUniqueName(System.String)">
            <summary>
            The is unique name.
            </summary>
            <param name="newName">
            The new name.
            </param>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.CategoryComp.Update(System.String,LiteBlog.Common.Category)">
            <summary>
            The update.
            </summary>
            <param name="oldCatID">
            The old cat id.
            </param>
            <param name="category">
            The category.
            </param>
        </member>
        <member name="T:MvcLiteBlog.BlogEngine.CommentComp">
            <summary>
            The comment comp.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.CommentComp.Approve(System.String)">
            <summary>
            The approve.
            </summary>
            <param name="commentID">
            The comment id.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.CommentComp.Delete(System.String)">
            <summary>
            The delete.
            </summary>
            <param name="commentID">
            The comment id.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.CommentComp.GetComment(System.String)">
            <summary>
            The get comment.
            </summary>
            <param name="id">
            The id.
            </param>
            <returns>
            The LiteBlog.Common.Comment.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.CommentComp.GetComments(System.Boolean)">
            <summary>
            The get comments.
            </summary>
            <param name="bRefresh">
            The b refresh.
            </param>
            <returns>
            The System.Collections.Generic.List`1[T -&gt; LiteBlog.Common.Comment].
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.CommentComp.GetUnapprovedComments(System.Boolean)">
            <summary>
            The get unapproved comments.
            </summary>
            <param name="bRefresh">
            The b refresh.
            </param>
            <returns>
            The System.Collections.Generic.List`1[T -&gt; LiteBlog.Common.Comment].
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.CommentComp.Insert(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            The insert.
            </summary>
            <param name="fileID">
            The file id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="url">
            The url.
            </param>
            <param name="text">
            The text.
            </param>
            <param name="isAuthor">
            The is author.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.CommentComp.Refresh">
            <summary>
            The refresh.
            </summary>
            <returns>
            The System.Collections.Generic.List`1[T -&gt; LiteBlog.Common.Comment].
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.CommentComp.Update(LiteBlog.Common.Comment)">
            <summary>
            The update.
            </summary>
            <param name="comment">
            The comment.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.CommentComp.SyntaxHighlight(System.String,System.String)">
            <summary>
            The syntax highlight.
            </summary>
            <param name="code">
            The code.
            </param>
            <param name="language">
            The language.
            </param>
            <returns>
            The System.String.
            </returns>
        </member>
        <member name="T:MvcLiteBlog.Helpers.ConfigHelper">
            <summary>
            The config helper.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Helpers.ConfigHelper.CacheContext">
            <summary>
            Gets the cache context.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Helpers.ConfigHelper.DataContext">
            <summary>
            Gets the data context.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Helpers.ConfigHelper.DataPath">
            <summary>
            Gets or sets the data path.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Helpers.ConfigHelper.DateFormat">
            <summary>
            Gets the date format.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Helpers.ConfigHelper.DefaultPassword">
            <summary>
            Gets the default password.
            </summary>
        </member>
        <member name="T:MvcLiteBlog.BlogEngine.AuthorComp">
            <summary>
            The author comp.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.AuthorComp.Create(LiteBlog.Common.Author)">
            <summary>
            The create.
            </summary>
            <param name="author">
            The author.
            </param>
            <returns>
            The LiteBlog.BlogEngine.EngineException.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.AuthorComp.Delete(System.String)">
            <summary>
            The delete.
            </summary>
            <param name="authorID">
            The author id.
            </param>
            <returns>
            The LiteBlog.BlogEngine.EngineException.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.AuthorComp.GetAuthor(System.String)">
            <summary>
            The get author.
            </summary>
            <param name="authorID">
            The author id.
            </param>
            <returns>
            The LiteBlog.Common.Author.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.AuthorComp.GetAuthorName(System.String)">
            <summary>
            The get author name.
            </summary>
            <param name="authorID">
            The author id.
            </param>
            <returns>
            The System.String.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.AuthorComp.GetAuthors">
            <summary>
            The get authors.
            </summary>
            <returns>
            The System.Collections.Generic.List`1[T -&gt; LiteBlog.Common.Author].
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.AuthorComp.GetDefaultAuthor">
            <summary>
            The get default author.
            </summary>
            <returns>
            The LiteBlog.Common.Author.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.AuthorComp.Unlock(System.String)">
            <summary>
            The unlock.
            </summary>
            <param name="authorID">
            The author id.
            </param>
            <returns>
            The LiteBlog.BlogEngine.EngineException.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.AuthorComp.Update(System.String,LiteBlog.Common.Author)">
            <summary>
            ID should be the same for update to work
            </summary>
            <param name="oldID">
            The old ID.
            </param>
            <param name="author">
            The author
            </param>
            <returns>
            The LiteBlog.BlogEngine.EngineException.
            </returns>
        </member>
        <member name="T:MvcLiteBlog.Helpers.CommenterProfile">
            <summary>
            The commenter profile.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Helpers.CommenterProfile.IP">
            <summary>
            Gets or sets the ip.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Helpers.CommenterProfile.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Helpers.CommenterProfile.Url">
            <summary>
            Gets or sets the url.
            </summary>
        </member>
        <member name="T:MvcLiteBlog.Helpers.AtomBool">
            <summary>
            The Atom bool.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Helpers.AtomBool.Atom">
            <summary>
            Gets or sets a value indicating whether Atom
            </summary>
        </member>
        <member name="T:MvcLiteBlog.Helpers.VisitorProfile">
            <summary>
            The visitor profile.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Helpers.VisitorProfile.IP">
            <summary>
            Gets or sets the ip.
            </summary>
        </member>
        <member name="T:MvcLiteBlog.Helpers.CustomProfile">
            <summary>
            The custom profile.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Helpers.CustomProfile.GetProfile(System.String)">
            <summary>
            The get profile.
            </summary>
            <param name="userName">
            The user name.
            </param>
            <returns>
            The LiteBlog.BlogEngine.CustomProfile.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Helpers.CustomProfile.GetProfile">
            <summary>
            The get profile.
            </summary>
            <returns>
            The LiteBlog.BlogEngine.CustomProfile.
            </returns>
        </member>
        <member name="P:MvcLiteBlog.Helpers.CustomProfile.IPAddress">
            <summary>
            Gets or sets the ip address.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Helpers.CustomProfile.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Helpers.CustomProfile.Url">
            <summary>
            Gets or sets the url.
            </summary>
        </member>
        <member name="T:MvcLiteBlog.Helpers.EngineException">
            <summary>
            The engine exception.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Helpers.EngineException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MvcLiteBlog.Helpers.EngineException"/> class.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Helpers.EngineException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MvcLiteBlog.Helpers.EngineException"/> class.
            </summary>
            <param name="msg">
            The msg.
            </param>
        </member>
        <member name="M:MvcLiteBlog.Helpers.EngineException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:MvcLiteBlog.Helpers.EngineException"/> class.
            </summary>
            <param name="msg">
            The msg.
            </param>
            <param name="ex">
            The ex.
            </param>
        </member>
        <member name="T:MvcLiteBlog.BlogEngine.SettingsComp">
            <summary>
            The settings comp.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.SettingsComp.GetSettings">
            <summary>
            The get settings.
            </summary>
            <returns>
            The LiteBlog.Common.Settings.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.SettingsComp.Save(LiteBlog.Common.Settings)">
            <summary>
            The save.
            </summary>
            <param name="settings">
            The settings.
            </param>
        </member>
        <member name="T:MvcLiteBlog.BlogEngine.DraftComp">
            <summary>
            The draft comp.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.DraftComp.Create(System.String,System.DateTime,System.String)">
            <summary>
            The create.
            </summary>
            <param name="title">
            The title.
            </param>
            <param name="time">
            The time.
            </param>
            <param name="catID">
            The cat id.
            </param>
            <returns>
            The System.String.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.DraftComp.Create(System.String)">
            <summary>
            The create.
            </summary>
            <param name="fileID">
            The file id.
            </param>
            <returns>
            The System.String.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.DraftComp.Delete(System.String)">
            <summary>
            The delete.
            </summary>
            <param name="draftID">
            The draft id.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.DraftComp.GetDrafts">
            <summary>
            The get drafts.
            </summary>
            <returns>
            The System.Collections.Generic.List`1[T -&gt; LiteBlog.Common.PostInfo].
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.DraftComp.Load(System.String)">
            <summary>
            The load.
            </summary>
            <param name="draftID">
            The draft id.
            </param>
            <returns>
            The LiteBlog.Common.DraftPost.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.DraftComp.RemoveDocument(System.String)">
            <summary>
            The remove document.
            </summary>
            <param name="path">
            The path.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.DraftComp.Save(LiteBlog.Common.DraftPost)">
            <summary>
            The save.
            </summary>
            <param name="post">
            The post.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.DraftComp.StoreDocument(System.Web.HttpPostedFileBase,System.String)">
            <summary>
            The store document.
            </summary>
            <param name="file">
            The file.
            </param>
            <param name="docPath">
            The doc path.
            </param>
            <returns>
            The System.String.
            </returns>
        </member>
        <member name="T:MvcLiteBlog.BlogEngine.PostComp">
            <summary>
            The post comp.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.PostComp.ChangeAuthor(System.String,System.String)">
            <summary>
            The change author.
            </summary>
            <param name="fileID">
            The file id.
            </param>
            <param name="author">
            The author.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.PostComp.ChangeCategory(System.String,System.String,System.String)">
            <summary>
            The change category.
            </summary>
            <param name="fileID">
            The file id.
            </param>
            <param name="oldCatID">
            The old cat id.
            </param>
            <param name="newCatID">
            The new cat id.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.PostComp.Delete(System.String)">
            <summary>
            The delete.
            </summary>
            <param name="fileID">
            The file id.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.PostComp.GetCategories(System.String)">
            <summary>
            The get categories.
            </summary>
            <param name="catID">
            The cat id.
            </param>
            <returns>
            The System.String.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.PostComp.GetPost(System.String,System.Boolean,System.Boolean)">
            <summary>
            Call this method from the UI only
            Do not use it from Admin.
            After GetPost using this function, do not save!!
            </summary>
            <param name="fileID">
            The File ID
            </param>
            <param name="bRefresh">
            The b Refresh.
            </param>
            <param name="bHighlight">
            The b Highlight.
            </param>
            <returns>
            The LiteBlog.Common.Post.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.PostComp.GetTime(System.DateTime,System.String)">
            <summary>
            The get time.
            </summary>
            <param name="time">
            The time.
            </param>
            <param name="author">
            The author.
            </param>
            <returns>
            The System.String.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.PostComp.Load(System.String)">
            <summary>
            The load.
            </summary>
            <param name="fileID">
            The file id.
            </param>
            <returns>
            The LiteBlog.Common.Post.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.PostComp.Save(LiteBlog.Common.Post)">
            <summary>
            The save.
            </summary>
            <param name="post">
            The post.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.PostComp.SyntaxHighlight(System.String,System.String)">
            <summary>
            The syntax highlight.
            </summary>
            <param name="code">
            The code.
            </param>
            <param name="language">
            The language.
            </param>
            <returns>
            The System.String.
            </returns>
        </member>
        <member name="T:MvcLiteBlog.BlogEngine.ProfileComp">
            <summary>
            The profile comp.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.ProfileComp.DeleteProfiles">
            <summary>
            The delete profiles.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.ProfileComp.GetCommenterProfile">
            <summary>
            The get commenter profile.
            </summary>
            <returns>
            The LiteBlog.BlogEngine.CommenterProfile.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.ProfileComp.GetDisplayName(System.String)">
            <summary>
            The get display name.
            </summary>
            <param name="id">
            The id.
            </param>
            <returns>
            The System.String.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.ProfileComp.SetCommenterProfile(System.String,System.String)">
            <summary>
            The set commenter profile.
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="url">
            The url.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.ProfileComp.SetDisplayName(System.String,System.String)">
            <summary>
            The set display name.
            </summary>
            <param name="id">
            The id.
            </param>
            <param name="name">
            The name.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.ProfileComp.SetVisitorProfile">
            <summary>
            The set visitor profile.
            </summary>
        </member>
        <member name="T:MvcLiteBlog.BlogEngine.PublisherComp">
            <summary>
            Helper component to PostComp for publishing
            </summary>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.PublisherComp.Publish(LiteBlog.Common.DraftPost)">
            <summary>
            The publish.
            </summary>
            <param name="post">
            The post.
            </param>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.PublisherComp.PublishScheduled">
            <summary>
            The publish scheduled.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.PublisherComp.Unpublish(LiteBlog.Common.PostInfo)">
            <summary>
            The unpublish.
            </summary>
            <param name="postInfo">
            The post info.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.PublisherComp.UpdateCategory(System.String,System.String)">
            <summary>
            The update category.
            </summary>
            <param name="oldCatID">
            The old cat id.
            </param>
            <param name="newCatID">
            The new cat id.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.PublisherComp.UpdateMonth(System.DateTime)">
            <summary>
            The update month.
            </summary>
            <param name="publishDate">
            The publish date.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.PublisherComp.UpdatePost(LiteBlog.Common.DraftPost)">
            <summary>
            The update post.
            </summary>
            <param name="post">
            The post.
            </param>
        </member>
        <member name="T:MvcLiteBlog.BlogEngine.ServiceComp">
            <summary>
            The service comp.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.ServiceComp.Initialize">
            <summary>
            Initializes service run times from Service.xml
            and store in in the Application state object
            Need to run from asp.net worker thread???
            </summary>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.ServiceComp.Run">
            <summary>
            The run.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.ServiceComp.Save(System.Collections.Generic.List{LiteBlog.Common.ServiceItem})">
            <summary>
            The save.
            </summary>
            <param name="svcList">
            The svc list.
            </param>
        </member>
        <member name="T:MvcLiteBlog.BlogEngine.StatComp">
            <summary>
            The stat comp.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.StatComp.IncrementFeeds">
            <summary>
            The increment feeds.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.StatComp.IncrementHits">
            <summary>
            The increment hits.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.StatComp.IncrementPosts(System.String)">
            <summary>
            The increment posts.
            </summary>
            <param name="fileID">
            The file id.
            </param>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.StatComp.IncrementVisits">
            <summary>
            The increment visits.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.StatComp.Initialize">
            <summary>
            to be called only from Application.Start() only
            </summary>
        </member>
        <member name="M:MvcLiteBlog.BlogEngine.StatComp.Save(LiteBlog.Common.Stat)">
            <summary>
            The save.
            </summary>
            <param name="stat">
            The stat.
            </param>
        </member>
        <member name="T:MvcLiteBlog.Helpers.UrlHelper">
            <summary>
            The url helper.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Helpers.UrlHelper.IsValidUrl(System.String)">
            <summary>
            The is valid url.
            </summary>
            <param name="url">
            The url.
            </param>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="T:MvcLiteBlog.Controllers.AdminController">
            <summary>
            The admin controller.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Controllers.AdminController.Application">
            <summary>
            The application.
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.AdminController.Application(MvcLiteBlog.Models.ManageAppModel)">
            <summary>
            The application.
            </summary>
            <param name="model">
            The model.
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.AdminController.ChgPwd">
            <summary>
            The chg pwd.
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.AdminController.ChgPwd(MvcLiteBlog.Models.ChgPwdModel)">
            <summary>
            The chg pwd.
            </summary>
            <param name="model">
            The model.
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.AdminController.Index">
            <summary>
            The index.
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.AdminController.Index(MvcLiteBlog.Models.LoginModel)">
            <summary>
            The index.
            </summary>
            <param name="model">
            The model.
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.AdminController.Logout">
            <summary>
            The logout.
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="T:MvcLiteBlog.Controllers.ArchiveController">
            <summary>
            The archive controller.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Controllers.ArchiveController.Archive">
            <summary>
            The archive.
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.ArchiveController.Index(System.Int32,System.Int32)">
            <summary>
            The index.
            </summary>
            <param name="year">
            The year.
            </param>
            <param name="month">
            The month.
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.ArchiveController.RecentPostsTile">
            <summary>
            The recent posts tile.
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.ArchiveController.Widget">
            <summary>
            The widget.
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="T:MvcLiteBlog.Controllers.AuthorController">
            <summary>
            The author controller.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Controllers.AuthorController.Create">
            <summary>
            The create.
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.AuthorController.Create(MvcLiteBlog.Models.AuthorModel)">
            <summary>
            The create.
            </summary>
            <param name="model">
            The model.
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.AuthorController.Delete(System.String)">
            <summary>
            The delete.
            </summary>
            <param name="id">
            The id.
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.AuthorController.Edit(System.String)">
            <summary>
            The edit.
            </summary>
            <param name="id">
            The id.
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.AuthorController.Edit(MvcLiteBlog.Models.AuthorModel)">
            <summary>
            The edit.
            </summary>
            <param name="model">
            The model.
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.AuthorController.Manage">
            <summary>
            The manage.
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.AuthorController.Unlock(System.String)">
            <summary>
            The unlock.
            </summary>
            <param name="id">
            The id.
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="T:MvcLiteBlog.Helpers.RssActionResult">
            <summary>
            The rss action result.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Helpers.RssActionResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <summary>
            The execute result.
            </summary>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="P:MvcLiteBlog.Helpers.RssActionResult.Feed">
            <summary>
            Gets or sets the feed.
            </summary>
        </member>
        <member name="T:MvcLiteBlog.Helpers.RssBool">
            <summary>
            The rss bool.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Helpers.RssBool.Rss">
            <summary>
            Gets or sets a value indicating whether Rss.
            </summary>
        </member>
        <member name="T:MvcLiteBlog.Controllers.LiteBlogController">
            <summary>
            The lite blog controller.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Controllers.LiteBlogController.Index">
            <summary>
            The index.
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="T:MvcLiteBlog.Extensions.InputHelper">
            <summary>
            The input helper.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Extensions.InputHelper.ValuedCheckBox(System.Web.Mvc.HtmlHelper,System.String,System.String)">
            <summary>
            The valued check box.
            </summary>
            <param name="helper">
            The helper.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="value">
            The value.
            </param>
            <returns>
            The System.Web.IHtmlString.
            </returns>
        </member>
        <member name="T:MvcLiteBlog.Extensions.PagerExtension">
            <summary>
            The pager extension.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Extensions.PagerExtension.Pager(System.Web.Mvc.HtmlHelper,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            The pager.
            </summary>
            <param name="helper">
            The helper.
            </param>
            <param name="action">
            The action.
            </param>
            <param name="pageIndex">
            The page index.
            </param>
            <param name="pageSize">
            The page size.
            </param>
            <param name="totalRecords">
            The total records.
            </param>
            <returns>
            The System.String.
            </returns>
        </member>
        <member name="T:MvcLiteBlog.MvcApplication">
            <summary>
            The mvc application.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.MvcApplication.RegisterRoutes(System.Web.Routing.RouteCollection)">
            <summary>
            The register routes.
            </summary>
            <param name="routes">
            The routes.
            </param>
        </member>
        <member name="M:MvcLiteBlog.MvcApplication.Profile_OnMigrateAnonymous(System.Object,System.Web.Profile.ProfileMigrateEventArgs)">
            <summary>
            The profile_ on migrate anonymous.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="M:MvcLiteBlog.MvcApplication.Application_BeginRequest(System.Object,System.EventArgs)">
            <summary>
            The application_ begin request.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="M:MvcLiteBlog.MvcApplication.Application_End(System.Object,System.EventArgs)">
            <summary>
            The application_ end.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="M:MvcLiteBlog.MvcApplication.Application_Start">
            <summary>
            The application_ start.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.MvcApplication.Session_Start(System.Object,System.EventArgs)">
            <summary>
            The session_ start.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="T:MvcLiteBlog.Helpers.KeywordConstraint">
            <summary>
            The keyword constraint.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Helpers.KeywordConstraint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MvcLiteBlog.Helpers.KeywordConstraint"/> class.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Helpers.KeywordConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
            <summary>
            The match.
            </summary>
            <param name="httpContext">
            The http context.
            </param>
            <param name="route">
            The route.
            </param>
            <param name="parameterName">
            The parameter name.
            </param>
            <param name="values">
            The values.
            </param>
            <param name="routeDirection">
            The route direction.
            </param>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="T:MvcLiteBlog.Helpers.KeywordConstraint2">
            <summary>
            The keyword constraint 2.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Helpers.KeywordConstraint2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MvcLiteBlog.Helpers.KeywordConstraint2"/> class.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Helpers.KeywordConstraint2.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
            <summary>
            The match.
            </summary>
            <param name="httpContext">
            The http context.
            </param>
            <param name="route">
            The route.
            </param>
            <param name="parameterName">
            The parameter name.
            </param>
            <param name="values">
            The values.
            </param>
            <param name="routeDirection">
            The route direction.
            </param>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="T:MvcLiteBlog.Helpers.NumberConstraint">
            <summary>
            The number constraint.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Helpers.NumberConstraint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MvcLiteBlog.Helpers.NumberConstraint"/> class.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Helpers.NumberConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
            <summary>
            The match.
            </summary>
            <param name="httpContext">
            The http context.
            </param>
            <param name="route">
            The route.
            </param>
            <param name="parameterName">
            The parameter name.
            </param>
            <param name="values">
            The values.
            </param>
            <param name="routeDirection">
            The route direction.
            </param>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="T:MvcLiteBlog.Models.FeedType">
            <summary>
            The feed type.
            </summary>
        </member>
        <member name="F:MvcLiteBlog.Models.FeedType.RSS">
            <summary>
            The rss.
            </summary>
        </member>
        <member name="F:MvcLiteBlog.Models.FeedType.ATOM">
            <summary>
            The atom.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.ComposePageModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="T:MvcLiteBlog.Models.LoginModel">
            <summary>
            The login model.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Models.LoginModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MvcLiteBlog.Models.LoginModel"/> class.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.LoginModel.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.LoginModel.UserName">
            <summary>
            Gets or sets the user name.
            </summary>
        </member>
        <member name="T:MvcLiteBlog.Models.ManageAppModel">
            <summary>
            The manage app model.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.ManageAppModel.BlogName">
            <summary>
            Gets or sets the blog name.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.ManageAppModel.CommentModeration">
            <summary>
            Gets or sets a value indicating whether comment moderation.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.ManageAppModel.ModerationList">
            <summary>
            Gets the moderation list.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.ManageAppModel.PostCount">
            <summary>
            Gets or sets the post count.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.ManageAppModel.PostCountList">
            <summary>
            Gets the post count list.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.ManageAppModel.TimeZoneList">
            <summary>
            Gets the time zone list.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.ManageAppModel.Timezone">
            <summary>
            Gets or sets the timezone.
            </summary>
        </member>
        <member name="T:MvcLiteBlog.Models.AuthorModel">
            <summary>
            The author model.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.AuthorModel.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.AuthorModel.Email">
            <summary>
            Gets or sets the email.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.AuthorModel.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="T:MvcLiteBlog.Models.CatModel">
            <summary>
            The cat model.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.CatModel.CatID">
            <summary>
            Gets or sets the cat id.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.CatModel.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="T:MvcLiteBlog.Models.ChgPwdModel">
            <summary>
            The chg pwd model.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.ChgPwdModel.NewPassword">
            <summary>
            Gets or sets the new password.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.ChgPwdModel.OldPassword">
            <summary>
            Gets or sets the old password.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.ChgPwdModel.RepeatPassword">
            <summary>
            Gets or sets the repeat password.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.ChgPwdModel.UserName">
            <summary>
            Gets or sets the user name.
            </summary>
        </member>
        <member name="T:MvcLiteBlog.Models.InsertCommentModel">
            <summary>
            The insert comment model.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.InsertCommentModel.CommentText">
            <summary>
            Gets or sets the comment text.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.InsertCommentModel.FileID">
            <summary>
            Gets or sets the file id.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.InsertCommentModel.IsAuthor">
            <summary>
            Gets or sets a value indicating whether is author.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.InsertCommentModel.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.InsertCommentModel.Url">
            <summary>
            Gets or sets the url.
            </summary>
        </member>
        <member name="T:MvcLiteBlog.Models.ComposePostModel">
            <summary>
            The compose post model.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.ComposePostModel.CatID">
            <summary>
            Gets or sets the cat id.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.ComposePostModel.CategoryList">
            <summary>
            Gets the category list.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.ComposePostModel.Content">
            <summary>
            Gets or sets the content.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.ComposePostModel.DraftID">
            <summary>
            Gets or sets the draft id.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.ComposePostModel.Post">
            <summary>
            Gets or sets the post.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.ComposePostModel.PublishDate">
            <summary>
            Gets or sets the publish date.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.ComposePostModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="T:MvcLiteBlog.Models.MonthYear">
            <summary>
            The month year.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Models.MonthYear.op_Equality(MvcLiteBlog.Models.MonthYear,MvcLiteBlog.Models.MonthYear)">
            <summary>
            Equals operator
            </summary>
            <param name="my1">The my1</param>
            <param name="my2">The my2</param>
            <returns>whether equal</returns>
        </member>
        <member name="M:MvcLiteBlog.Models.MonthYear.op_Inequality(MvcLiteBlog.Models.MonthYear,MvcLiteBlog.Models.MonthYear)">
            <summary>
            The !=.
            </summary>
            <param name="my1">
            The my 1.
            </param>
            <param name="my2">
            The my 2.
            </param>
            <returns>
            whether not equal
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Models.MonthYear.Equals(System.Object)">
            <summary>
            The equals.
            </summary>
            <param name="obj">
            The obj.
            </param>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Models.MonthYear.GetHashCode">
            <summary>
            The get hash code.
            </summary>
            <returns>
            The System.Int32.
            </returns>
        </member>
        <member name="P:MvcLiteBlog.Models.MonthYear.Month">
            <summary>
            Gets or sets the Month
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Models.MonthYear.Year">
            <summary>
            Gets or sets the year
            </summary>
        </member>
        <member name="T:MvcLiteBlog.Models.MonthYearComparer">
            <summary>
            The month year comparer.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Models.MonthYearComparer.Equals(MvcLiteBlog.Models.MonthYear,MvcLiteBlog.Models.MonthYear)">
            <summary>
            The equals.
            </summary>
            <param name="x">
            The x.
            </param>
            <param name="y">
            The y.
            </param>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Models.MonthYearComparer.GetHashCode(MvcLiteBlog.Models.MonthYear)">
            <summary>
            The get hash code.
            </summary>
            <param name="obj">
            The obj.
            </param>
            <returns>
            The System.Int32.
            </returns>
        </member>
        <member name="T:MvcLiteBlog.Controllers.CategoryController">
            <summary>
            The category controller.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Controllers.CategoryController.Create">
            <summary>
            The create.
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.CategoryController.Create(MvcLiteBlog.Models.CatModel)">
            <summary>
            The create.
            </summary>
            <param name="model">
            The model.
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.CategoryController.Delete(System.String)">
            <summary>
            The delete.
            </summary>
            <param name="id">
            The id.
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.CategoryController.Edit(System.String)">
            <summary>
            The edit.
            </summary>
            <param name="id">
            The id.
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.CategoryController.Edit(System.String,MvcLiteBlog.Models.CatModel)">
            <summary>
            The edit.
            </summary>
            <param name="id">
            The id.
            </param>
            <param name="model">
            The model.
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.CategoryController.Index(System.String)">
            <summary>
            The index.
            </summary>
            <param name="id">
            The id.
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.CategoryController.Manage">
            <summary>
            The manage.
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.CategoryController.Reorder">
            <summary>
            The reorder.
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.CategoryController.Reorder(System.String)">
            <summary>
            The reorder.
            </summary>
            <param name="order">
            The order.
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.CategoryController.Widget">
            <summary>
            The widget.
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="T:MvcLiteBlog.Controllers.CommentController">
            <summary>
            Used for creating comments from user pages
            Used for editing, deleting, approving, rejecting comments from admin pages
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Controllers.CommentController.Approve(System.Web.Mvc.FormCollection)">
            <summary>
            Approves or rejects a list of comments
            Redirects to the moderation list page
            </summary>
            <param name="coll">
            Form Collection
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.CommentController.CommentFormControl">
            <summary>
            A partial view displaying the comment form
            Users can use this form to enter comments
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.CommentController.Create(MvcLiteBlog.Models.InsertCommentModel)">
            <summary>
            Creates a comment
            Always called using Ajax, Do not want to refresh the entire screen
            Shown to all user
            </summary>
            <param name="model">
            The model
            </param>
            <returns>
            error message
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.CommentController.Delete(System.Int32,System.Web.Mvc.FormCollection)">
            <summary>
            Delete the selected comments
            Redirects to comments list page
            </summary>
            <param name="page">
            Page Index starting with zero
            </param>
            <param name="coll">
            Form collection
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.CommentController.Details(System.String)">
            <summary>
            Gets a list of comments as JSON
            It is called from PostControl from the user pages
            </summary>
            <param name="id">
            Post ID
            </param>
            <returns>
            List of comments (as JSON)
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.CommentController.Edit(System.String)">
            <summary>
            Gets comment details for editing
            </summary>
            <param name="id">
            Comment ID
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.CommentController.Edit(LiteBlog.Common.Comment)">
            <summary>
            Updates comment based on ID
            Finds the current page index
            Redirects to comments list page at appropriate pageindex
            </summary>
            <param name="comment">
            The comment
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.CommentController.Manage(System.Nullable{System.Int32})">
            <summary>
            Gets list of comments
            Manages comments in a simple way
            Paging and Tabs are handled in QueryString
            ViewBag is used to store page-state data
            </summary>
            <param name="page">
            Page Index starting with 0
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.CommentController.Moderate">
            <summary>
            Comments moderation page
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.CommentController.Recent">
            <summary>
            A list of comments posted
            Shown to all users
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.CommentController.RecentCommentsTile">
            <summary>
            Top 3 comments posted
            Shown on comments tile on the home page
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="T:MvcLiteBlog.Controllers.HomeController">
            <summary>
            The home controller.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Controllers.HomeController.About">
            <summary>
            The about.
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.HomeController.AdminMenu">
            <summary>
            The admin menu.
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.HomeController.AdminTitle">
            <summary>
            The admin title.
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.HomeController.Atom">
            <summary>
            The Atom
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.HomeController.Error">
            <summary>
            The error.
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.HomeController.Index">
            <summary>
            The index.
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.HomeController.MostPopularTile">
            <summary>
            The most popular tile.
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.HomeController.Rss">
            <summary>
            The rss.
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.HomeController.Stat">
            <summary>
            The stat.
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.HomeController.Title">
            <summary>
            The title.
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.HomeController.Initialize(System.Web.Routing.RequestContext)">
            <summary>
            The initialize.
            </summary>
            <param name="requestContext">
            The request context.
            </param>
        </member>
        <member name="M:MvcLiteBlog.Controllers.HomeController.WriteFeedXml(MvcLiteBlog.Models.FeedType)">
            <summary>
            The write feed xml.
            </summary>
            <param name="feedType">
            The feed Type.
            </param>
        </member>
        <member name="T:MvcLiteBlog.Controllers.PostController">
            <summary>
            The post controller.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Controllers.PostController.Close(MvcLiteBlog.Models.ComposePostModel)">
            <summary>
            Close the form without saving
            </summary>
            <param name="model">
            The Post
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.PostController.Compose(System.String)">
            <summary>
            Compose action
            </summary>
            <param name="id">
            The id
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.PostController.Correct">
            <summary>
            Is it obsolete??
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.PostController.Delete(System.String)">
            <summary>
            Delete a post with a FileID
            </summary>
            <param name="id">
            File ID
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.PostController.DeleteAttachment(System.String)">
            <summary>
            The delete attachment.
            </summary>
            <param name="id">
            The id.
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.PostController.DeleteDraft(System.String)">
            <summary>
            Delete a draft with draft id
            </summary>
            <param name="id">
            Draft ID
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.PostController.GetComments(System.String)">
            <summary>
            Gets a comment
            Called from PostControl from user pages
            </summary>
            <param name="id">
            The id
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.PostController.Index(System.String)">
            <summary>
            Permalink page
            Called from users
            </summary>
            <param name="id">
            File ID
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.PostController.Manage(System.Nullable{System.Int32})">
            <summary>
            Gets a list of published posts with paging enabled
            Gets a list of draft posts
            </summary>
            <param name="page">
            pageIndex starting from 0
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.PostController.ManageDraft">
            <summary>
            Gets a list of draft posts
            </summary>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.PostController.PostControl(System.String)">
            <summary>
            Post Control
            </summary>
            <param name="id">
            The id
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.PostController.Preview(MvcLiteBlog.Models.ComposePostModel)">
            <summary>
            Preview post
            </summary>
            <param name="model">
            The Post
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.PostController.Publish(MvcLiteBlog.Models.ComposePostModel)">
            <summary>
            Publish a post
            Private method because it is called internally?
            </summary>
            <param name="model">
            The Post
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.PostController.Save(MvcLiteBlog.Models.ComposePostModel)">
            <summary>
            Saves a post
            Internal method
            </summary>
            <param name="model">
            The Post
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.PostController.Upload(MvcLiteBlog.Models.ComposePostModel)">
            <summary>
            Uploads a document
            </summary>
            <param name="model">
            The Post
            </param>
            <returns>
            The System.Web.Mvc.ActionResult.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.PostController.SavePost(LiteBlog.Common.DraftPost)">
            <summary>
            The save post.
            </summary>
            <param name="post">
            The post.
            </param>
            <returns>
            The LiteBlog.Common.DraftPost.
            </returns>
        </member>
        <member name="M:MvcLiteBlog.Controllers.PostController.UpdatePost(MvcLiteBlog.Models.ComposePostModel)">
            <summary>
            Strange method, got to look into it
            </summary>
            <param name="model">
            The model
            </param>
        </member>
        <member name="T:MvcLiteBlog.Attributes.MultiButtonAttribute">
            <summary>
            The multi button attribute.
            </summary>
        </member>
        <member name="M:MvcLiteBlog.Attributes.MultiButtonAttribute.IsValidName(System.Web.Mvc.ControllerContext,System.String,System.Reflection.MethodInfo)">
            <summary>
            The is valid name.
            </summary>
            <param name="controllerContext">
            The controller context.
            </param>
            <param name="actionName">
            The action name.
            </param>
            <param name="methodInfo">
            The method info.
            </param>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="P:MvcLiteBlog.Attributes.MultiButtonAttribute.FormName">
            <summary>
            Gets or sets the form name.
            </summary>
        </member>
        <member name="P:MvcLiteBlog.Attributes.MultiButtonAttribute.FormValue">
            <summary>
            Gets or sets the form value.
            </summary>
        </member>
    </members>
</doc>
